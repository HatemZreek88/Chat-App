{"ast":null,"code":"var _jsxFileName = \"/home/dci-l207/Desktop/chat-app/client/src/components/Messages/Message/Message.js\";\nimport React from \"react\";\nimport \"./Message.css\";\nimport ReactEmoji from \"react-emoji\";\nimport Picker from \"emoji-picker-react\"; //\n\nconst Message = ({\n  message: {\n    text,\n    user\n  },\n  name\n}) => {\n  let isSentByCurrentUser = false;\n  const [chosenEmoji, setChosenEmoji] = useState(\"\"); //\n\n  const onEmojiClick = (event, emojiObject) => {\n    setChosenEmoji(emojiObject);\n  }; //\n\n\n  const trimmedName = name.trim().toLowerCase();\n\n  if (user === trimmedName) {\n    isSentByCurrentUser = true;\n  }\n\n  return isSentByCurrentUser ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messageContainer justifyEnd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sentText pr-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, trimmedName), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messageBox backgroundBlue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"messageText colorWhite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, ReactEmoji.emojify(text))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, chosenEmoji ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"You chose: \", chosenEmoji.emoji) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"No emoji Chosen\"), /*#__PURE__*/React.createElement(Picker, {\n    onEmojiClick: onEmojiClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messageContainer justifyStart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messageBox backgroundLight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"messageText colorDark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, ReactEmoji.emojify(text))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sentText pl-10 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, user), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, chosenEmoji ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"You chose: \", chosenEmoji.emoji) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"No emoji Chosen\"), /*#__PURE__*/React.createElement(Picker, {\n    onEmojiClick: onEmojiClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Message;","map":{"version":3,"sources":["/home/dci-l207/Desktop/chat-app/client/src/components/Messages/Message/Message.js"],"names":["React","ReactEmoji","Picker","Message","message","text","user","name","isSentByCurrentUser","chosenEmoji","setChosenEmoji","useState","onEmojiClick","event","emojiObject","trimmedName","trim","toLowerCase","emojify","emoji"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,eAAP;AAEA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,MAAP,MAAmB,oBAAnB,C,CAAyC;;AAEzC,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAX;AAA2BC,EAAAA;AAA3B,CAAD,KAAuC;AACrD,MAAIC,mBAAmB,GAAG,KAA1B;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCC,QAAQ,CAAC,EAAD,CAA9C,CAFqD,CAED;;AACpD,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,WAAR,KAAwB;AAC3CJ,IAAAA,cAAc,CAACI,WAAD,CAAd;AACD,GAFD,CAHqD,CAKlD;;;AACH,QAAMC,WAAW,GAAGR,IAAI,CAACS,IAAL,GAAYC,WAAZ,EAApB;;AAEA,MAAIX,IAAI,KAAKS,WAAb,EAA0B;AACxBP,IAAAA,mBAAmB,GAAG,IAAtB;AACD;;AAED,SAAOA,mBAAmB,gBACxB;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BO,WAA/B,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCd,UAAU,CAACiB,OAAX,CAAmBb,IAAnB,CAAvC,CADF,CAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,WAAW,gBACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkBA,WAAW,CAACU,KAA9B,CADU,gBAGV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJJ,eAME,oBAAC,MAAD;AAAQ,IAAA,YAAY,EAAEP,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CALF,CADwB,gBAgBxB;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCX,UAAU,CAACiB,OAAX,CAAmBb,IAAnB,CAAtC,CADF,CADF,eAIE;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCC,IAAhC,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,WAAW,gBACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkBA,WAAW,CAACU,KAA9B,CADU,gBAGV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJJ,eAME,oBAAC,MAAD;AAAQ,IAAA,YAAY,EAAEP,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CALF,CAhBF;AA+BD,CA3CD;;AA6CA,eAAeT,OAAf","sourcesContent":["import React from \"react\";\n\nimport \"./Message.css\";\n\nimport ReactEmoji from \"react-emoji\";\nimport Picker from \"emoji-picker-react\"; //\n\nconst Message = ({ message: { text, user }, name }) => {\n  let isSentByCurrentUser = false;\n  const [chosenEmoji, setChosenEmoji] = useState(\"\"); //\n  const onEmojiClick = (event, emojiObject) => {\n    setChosenEmoji(emojiObject);\n  }; //\n  const trimmedName = name.trim().toLowerCase();\n\n  if (user === trimmedName) {\n    isSentByCurrentUser = true;\n  }\n\n  return isSentByCurrentUser ? (\n    <div className=\"messageContainer justifyEnd\">\n      <p className=\"sentText pr-10\">{trimmedName}</p>\n      <div className=\"messageBox backgroundBlue\">\n        <p className=\"messageText colorWhite\">{ReactEmoji.emojify(text)}</p>\n      </div>\n      <div>\n        {chosenEmoji ? (\n          <span>You chose: {chosenEmoji.emoji}</span>\n        ) : (\n          <span>No emoji Chosen</span>\n        )}\n        <Picker onEmojiClick={onEmojiClick} />\n      </div>\n    </div>\n  ) : (\n    <div className=\"messageContainer justifyStart\">\n      <div className=\"messageBox backgroundLight\">\n        <p className=\"messageText colorDark\">{ReactEmoji.emojify(text)}</p>\n      </div>\n      <p className=\"sentText pl-10 \">{user}</p>\n      <div>\n        {chosenEmoji ? (\n          <span>You chose: {chosenEmoji.emoji}</span>\n        ) : (\n          <span>No emoji Chosen</span>\n        )}\n        <Picker onEmojiClick={onEmojiClick} />\n      </div>\n    </div>\n  );\n};\n\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}